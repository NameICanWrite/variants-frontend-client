{"version":3,"sources":["features/TheLog/logSlice.js","features/MindScrapForm/MindScrapModal/slice.js","features/Inbox/API.js","features/Inbox/slice.js","logo.svg","features/Standalone components/Button.js","features/Header/Header.js","features/CreateLetterModal/slice.js","features/CreateLetterModal/CreateLetterForm/Fields/Markup.jsx","features/Standalone components/Tabs/Tabs.js","features/CreateLetterModal/CreateLetterForm/Fields/Expression.jsx","img/icons/folder.png","features/CreateLetterModal/CreateLetterForm/Fields/FlightControl.jsx","features/CreateLetterModal/CreateLetterForm/Fields/API.js","features/CreateLetterModal/CreateLetterForm/Fields/SourceData.jsx","features/CreateLetterModal/CreateLetterForm/API.js","features/CreateLetterModal/CreateLetterForm/slice.js","utils/subscribePushNotifications.js","features/CreateLetterModal/CreateLetterForm/CreateLetterForm.jsx","features/CreateLetterModal/CreateLetterModal.jsx","features/Standalone components/Footer.js","features/About/About.js","features/TheLog/LogRecord.js","features/Standalone components/TextareaForm.js","features/TheLog/LogTextArea.js","features/TheLog/Log.js","features/About/Articles/articlesSlice.js","features/About/Articles/Article/Article.js","features/Standalone components/ComboBox.js","features/Variants/Variant/API.js","features/Variants/API.js","features/Variants/slice.js","features/Variants/Variant/Choice/Choice.js","features/Variants/Variant/Variant.js","features/Variants/Variants.js","features/MindScrapForm/MindScrapForm.js","features/MindScrapForm/MindScrapModal/MindScrapModal.js","features/Details/detailsSlice.js","features/Inbox/InboxLetter/API.js","features/Inbox/InboxLetter/InboxLetter.jsx","features/Inbox/Inbox.jsx","App.js","index.js","reportWebVitals.js","features/Standalone components/scalesSlice.js","features/TasksFilter/tasksFilterSlice.js","app/store.js"],"names":["fetchLog","createAsyncThunk","a","axios","get","serverPath","response","data","postLogRecord","logRecord","console","log","post","logSlice","createSlice","name","initialState","logData","status","reducers","extraReducers","fulfilled","state","payload","push","current","Slice","show","toggleMindScrapModal","actions","fetchData","fetchInbox","inboxData","Button","color","text","onClick","className","style","backgroundColor","defaultProps","Header","title","location","useLocation","headingStyle","useDispatch","borderRadius","padding","boxShadow","pathname","toggleShow","Markup","handle","target","fontSize","paddingLeft","marginLeft","type","marginTop","width","height","onChange","e","value","markup","id","Tabs","tabs","React","useState","currentTab","setCurrentTab","map","Content","Expression","types","textareaValue","setTextareaValue","selectedType","setSelectedType","textareaRef","createRef","changeTextareaSize","scrollHeight","ChooseType","Tooltip","placement","checked","expectedType","cols","rows","ref","NotificationSettings","ChooseDate","dateMode","setDateMode","from","setFrom","to","setTo","earliestDateRef","useRef","latestDateRef","preciseDateRef","earliestHoursRef","latestHoursRef","endOfDay","parseDate","previous","day","time","Date","hours","slice","getHours","minutes","getMinutes","toString","setHours","formatDate","dateObject","date","getDay","getDate","month","getMonth","year","getFullYear","serializedDate","activeKey","onSelect","k","Tab","eventKey","placeholder","event","dateFrom","dateTo","FlightControl","fields","SourceData","plain","transform","src","folderImg","flightControl","notification","Letter","subClasses","this","generateId","now","forProperty","files","contacts","generators","instances","forEach","Class","isDefault","serializeObject","object","serialized","Object","getOwnPropertyNames","filter","property","serialize","Array","isArray","undefined","serializeArray","length","toUTCString","arr","item","postData","testDate","setSeconds","parseInt","getSeconds","toISOString","postLetter","letter","CreateLetterForm","dispatch","selectedField","setSelectedField","currentLetter","setCurrentLetter","expression","sourceData","tab","index","subscribePushNotifications","CreateLetterModal","useSelector","createLetterModal","Modal","open","onClose","Footer","About","LogRecord","thisHours","getUTCHours","thisMinutes","getUTCMinutes","header","other","trigger","TextareaForm","onSend","autosaveAdress","alt","LogTextArea","currentLogRecord","Log","monthNames","reverse","thisDate","getUTCDate","todayDate","nextDate","thisMonth","getUTCMonth","todayMonth","nextMonth","fetchArticles","postArticle","article","put","articlesSlice","articlesData","Article","headerRef","textRef","editable","readOnly","createFilterOptions","FreeSoloCreateOption","options","handleValue","setValue","inputValue","setInputValue","useEffect","Autocomplete","newValue","onInputChange","newInputValue","filterOptions","params","filtered","selectOnFocus","clearOnBlur","handleHomeEndKeys","getOptionLabel","option","renderOption","freeSolo","renderInput","InputProps","inputProps","EventData","isNotEmpty","events","load","setName","addEvent","choiceName","eventName","receiveEvent","deserialize","eventData","instance","Choice","variants","addVariant","variant","receiveVariant","findIndex","addWeight","serializeVariants","choice","Variant","weight","choices","causes","receiveName","addChoice","receiveChoice","addData","newVariant","newChoice","serializeChoices","eventsData","variantsData","dataTarget","find","sendData","deleteData","changeData","fetchVariants","postEvents","deleteVariants","changeVariants","variantsSlice","addEventData","createAllEventsData","variantName","addVariantToChoice","action","task","modifyEventData","currentChecked","setCurrentChecked","handleChoiceClick","prompt","toLocaleLowerCase","handleAddVariant","marginRight","folded","setFold","handleChoice","chosenVariantName","backgroundImage","toLowerCase","handleAddChoice","Variants","newVar","MindScrapForm","MindScrapperModal","mindScrapModal","onHide","contentClassName","dialogClassName","centered","Body","detailsSlice","showDetails","setShowDetails","path","InboxLetter","Keyboard","handleClick","answerLetter","Inbox","inbox","App","document","querySelectorAll","textarea","spellcheck","exact","render","props","MindScrapModal","minHeight","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","scalesSlice","priorityScale","probabilityScale","tasksFilterSlice","priority","probability","filterOn","setPriority","setProbability","filterSwitch","toggleShowFilter","store","configureStore","reducer","headerReducer","logReducer","articles","articlesReducer","createLetterModalReducer","details","detailsReducer","scales","scalesReducer","tasksFilter","tasksFilterReducer","variantsReducer","mindScrapModalReducer","awaitingLetters","awaitingLettersReducer","inboxReducer","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.83f1b06b.chunk.js","sourcesContent":["import { createSlice, createAsyncThunk, current } from '@reduxjs/toolkit'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport axios from 'axios'\r\n\r\nimport serverPath from \"../../index\";\r\n\r\nconst initialState = {\r\n  logData: [123],\r\n  status: 'idle',\r\n};\r\n\r\nexport const fetchLog = createAsyncThunk('log/fetchLog', async () => {\r\n  const response = await axios.get(serverPath + '/log');\r\n  return response.data\r\n})\r\n\r\nexport const postLogRecord = createAsyncThunk('log/addLogRecord', async (logRecord) => {\r\n  console.log(serverPath + '/log')\r\n  await axios.post(serverPath + '/log', logRecord)\r\n  return logRecord\r\n})\r\n\r\nexport const logSlice = createSlice({\r\n  name: 'log',\r\n  initialState,\r\n  reducers: {\r\n  },\r\n  extraReducers: {\r\n    // [fetchTasks.pending]: (state, action) => {\r\n    //   state.status = 'loading'\r\n    // },\r\n    [fetchLog.fulfilled]: (state, { payload }) => {\r\n      state.logData = payload\r\n      state.status = 'success'\r\n    },\r\n    [postLogRecord.fulfilled]: (state, { payload }) => {\r\n      state.logData.push(payload)\r\n      state.status = 'success'\r\n      console.log(current(state.logData))\r\n    }\r\n   }\r\n})\r\n\r\nexport const selectLog = (state) => state.tasks.logData\r\n\r\n// export const { fetchTasks, check } = tasksSlice.actions\r\n\r\nexport default logSlice.reducer","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { fetchData } from './API'\r\n\r\n//** important:  ALWAYS REINITIALIZE ARRAY\r\n\r\nconst initialState = {\r\n  show: false,\r\n//   fooData: []\r\n  status: 'idle',\r\n};\r\n\r\n// export const fetchFoo = createAsyncThunk('foo/fetchFoo', async () => fetchData())\r\n\r\nexport const Slice = createSlice({\r\n  name: 'mindScrapForm',\r\n  initialState,\r\n  reducers: {\r\n    toggleMindScrapModal: (state) => {\r\n       state.show = !state.show \r\n    }\r\n  },\r\n  extraReducers: {\r\n    // [fetchFoo.fulfilled]: (state, { payload }) => {\r\n    //   state.fooData = payload\r\n    //   state.status = 'success'\r\n    // },\r\n  }\r\n});\r\n\r\nexport const { toggleMindScrapModal } = Slice.actions;\r\n\r\n// export const selectFoo = (state) => state.header.foo;\r\n\r\nexport default Slice.reducer;","import axios from 'axios';\r\n\r\nimport serverPath from \"../../index\";\r\n\r\n\r\nexport const fetchData = async () => {\r\n    const response = await axios.get(serverPath + '/inbox');\r\n    console.log(response.data)\r\n    return response.data\r\n}\r\n\r\nexport const postData = async () => {\r\n    const response = await axios.post(serverPath + '/inbox');\r\n    return response.data\r\n}","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { fetchData } from './API'\r\n\r\n//** important:  ALWAYS REINITIALIZE ARRAY \r\n\r\nconst initialState = {\r\n//   foo: false,\r\n  inboxData: [],\r\n  status: 'idle',\r\n};\r\n\r\nexport const fetchInbox = createAsyncThunk('inbox/fetchInbox', async () => fetchData())\r\n\r\nexport const Slice = createSlice({\r\n  name: 'inbox',\r\n  initialState,\r\n  reducers: {\r\n\r\n  },\r\n  extraReducers: {\r\n    [fetchInbox.fulfilled]: (state, { payload }) => {\r\n      state.inboxData = payload\r\n      state.status = 'success'\r\n    },\r\n  }\r\n});\r\n\r\n// export const { togglefoo } = Slice.actions;\r\n\r\n// export const selectFoo = (state) => state.header.foo;\r\n\r\nexport default Slice.reducer;","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nfunction Button({ color, text, onClick, className = 'btn', style }) {\r\n    return (\r\n        <button onClick={onClick} style={{...style, backgroundColor: color}}\r\n            className={className}>{text}</button>\r\n    )\r\n}\r\n\r\nButton.defaultProps = {\r\n    color: 'steelblue'\r\n}\r\n\r\nButton.propTypes = {\r\n    text: PropTypes.string,\r\n    color: PropTypes.string,\r\n    onClick: PropTypes.func\r\n}\r\n\r\nexport default Button\r\n","\r\nimport { blue } from '@material-ui/core/colors'\r\nimport PropTypes from 'prop-types'\r\nimport Button from '../Standalone components/Button'\r\nimport { useLocation } from 'react-router-dom'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n// import {\r\n// toggleShowAddTaskForm,\r\n// selectShowAddTaskForm\r\n// } from './headerSlice';\r\n\r\nlet backgroundColor\r\n\r\nfunction Header({title, color}) {\r\n    const location = useLocation()\r\n    // const showAddTaskForm = useSelector(selectShowAddTaskForm)\r\n    const dispatch = useDispatch() \r\n    \r\n    const headingStyle = {\r\n    color: 'black',\r\n    backgroundColor: color,\r\n    borderRadius: '10px',\r\n    padding: '4px 4px',\r\n    boxShadow: '2px 2px gray',\r\n    }\r\n\r\n    return (\r\n        <header className='header'>\r\n            <h1 style={headingStyle}>{title}</h1>\r\n            {title == 'Task tracker' && location.pathname === '/' && (<Button \r\n            //    color={showAddTaskForm ? 'red' : 'green'} \r\n            //     text={showAddTaskForm ? 'Close' : 'Add'} \r\n            //     onClick={() => {\r\n            //         dispatch(toggleShowAddTaskForm())\r\n            //         } \r\n            //     } \r\n                />\r\n            )}        \r\n        </header>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    title: 'Poor thing'\r\n}\r\n\r\nHeader.propTypes = {\r\n    title: PropTypes.string\r\n}\r\n\r\n\r\n\r\nexport default Header\r\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\n//** important:  ALWAYS REINITIALIZE ARRAY \r\n\r\nconst initialState = {\r\n  show: true,\r\n//   fooData: []\r\n  status: 'idle',\r\n};\r\n\r\n// export const fetchFoo = createAsyncThunk('foo/fetchFoo', async () => fetchData())\r\n\r\nexport const Slice = createSlice({\r\n  name: 'createLetterModal',\r\n  initialState,\r\n  reducers: {\r\n    toggleShow: (state) => {\r\n      state.show = !state.show;\r\n      console.log('toggle')\r\n    }\r\n  },\r\n  extraReducers: {\r\n    // [fetchFoo.fulfilled]: (state, { payload }) => {\r\n    //   state.fooData = payload\r\n    //   state.status = 'success'\r\n    // },\r\n  }\r\n});\r\n\r\nexport const { toggleShow } = Slice.actions;\r\n\r\n// export const selectFoo = (state) => state.header.foo;\r\n\r\nexport default Slice.reducer;","import React from 'react'\r\n\r\nfunction Markup({handle, target}) {\r\n    return (\r\n        <div>\r\n            <fieldset className=\"main-fieldset\" style={{fontSize: 17, paddingLeft: 25}}>\r\n                <label>\r\n                    <span style={{marginLeft: '30px'}}>name</span>\r\n                    <br />\r\n                    <input type=\"text\" style={{marginTop: 10, width: 130, height: 25}}\r\n                        onChange={(e) => handle.name(e.target.value)}\r\n                    />\r\n                </label>\r\n                <label style={{marginTop: 30}}>\r\n                    <span>id:</span><span>{target.markup.id}</span>\r\n                </label>\r\n            </fieldset>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Markup\r\n","import React from 'react'\r\nimport './style.sass'\r\n\r\nfunction Tabs({tabs}) {\r\n    const [currentTab, setCurrentTab] = React.useState(tabs[0].title)\r\n    return (\r\n        <div>\r\n            {\r\n                tabs.map(({ title, Content }) => title == currentTab && Content())\r\n            }\r\n            <div className=\"tab-pane\">\r\n                {\r\n                    tabs.map(({ title }) =>\r\n                        <div\r\n                            className={`tab-button${title == currentTab ? ' focus' : ''}`}\r\n                            onClick={() => setCurrentTab(title)}\r\n                        >{title}</div>\r\n                    )\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tabs\r\n","import '../style.sass'\r\nimport React from 'react'\r\nimport { useState } from 'react'\r\n\r\nimport { Tooltip } from '@material-ui/core'\r\n\r\nimport Tabs from '../../../Standalone components/Tabs/Tabs'\r\n\r\nfunction Expression({ handle }) {\r\n\r\n    const types = ['bool', 'number', 'string', 'object', 'neural', 'encoded']\r\n    const [textareaValue, setTextareaValue] = useState()\r\n    const [selectedType, setSelectedType] = useState()\r\n    \r\n\r\n    const textareaRef = React.createRef()\r\n\r\n    const changeTextareaSize = async () => {\r\n        textareaRef.current.style.height = 'inherit';\r\n        textareaRef.current.style.height = `${textareaRef.current.scrollHeight + 2}px`;\r\n    }\r\n\r\n    const ChooseType = function () {\r\n        \r\n        return (\r\n            <div>\r\n                <label>\r\n                    <Tooltip title='used by system to create SENSOR' placement='right-start'>\r\n                        <span className='tip'>type</span>\r\n                    </Tooltip>\r\n                    <div className=\"check-group\" style={{ marginTop: 0 }}>\r\n                        {\r\n                            types.map(type =>\r\n                                <label className='check-label'>\r\n                                    <input type=\"checkbox\" checked={type == selectedType} onChange={(e) => {\r\n                                        if (e.target.checked) {\r\n                                            setSelectedType(type)\r\n                                            handle.expectedType(type)\r\n                                        }\r\n                                    }} />\r\n                                    <span>{type}</span>\r\n                                </label>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </label>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const tabs =\r\n        [\r\n            {\r\n                title: 'Text',\r\n                Content: function () {\r\n                    \r\n                    return (\r\n                        <div className='content-container'>\r\n                            <label>\r\n                                <span>Шуканий вираз</span>\r\n                                <textarea className='textarea' cols=\"25\" rows=\"2\" ref={textareaRef}\r\n                                    onChange={(e) => {\r\n                                        changeTextareaSize(e)\r\n                                        setTextareaValue(e.target.value)\r\n                                        handle.text(e.target.value)\r\n                                    }}\r\n                                    value={textareaValue}\r\n                                ></textarea>\r\n                            </label>\r\n                            <ChooseType />\r\n                        </div>\r\n                    )\r\n                }\r\n            },\r\n            {\r\n                title: 'Neural',\r\n                Content: function () {\r\n                    return (\r\n                        <div className='content-container'>\r\n                            <h1>Do stuff</h1>\r\n                            <ChooseType />\r\n                        </div>\r\n                    )\r\n                }\r\n            }\r\n        ]\r\n    return (\r\n        <div>\r\n            <fieldset className='main-fieldset'>\r\n                <Tabs tabs={tabs} />\r\n            </fieldset>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Expression\r\n","export default __webpack_public_path__ + \"static/media/folder.d33ac30e.png\";","// Vector - because letter needs :\r\n\r\n// to know directioncoordinates where it arrives \r\n// (time / location for instance)\r\n\r\n// to know \"power of notification\"\r\n\r\nimport React from 'react'\r\nimport { useState } from 'react'\r\n\r\nimport Tabs from 'react-bootstrap/Tabs'\r\nimport Tab from 'react-bootstrap/Tab'\r\nimport { Tooltip } from '@material-ui/core'\r\n\r\nfunction FlightControl({handle, target}) {\r\n\r\n\r\n    return (\r\n        <div className='main-fieldset content-container' style={{ paddingLeft: 0 }}>\r\n            <ChooseDate handle={handle.time} target={target.flightControl.time}/>\r\n            <NotificationSettings handle={handle.notification} />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nfunction NotificationSettings({handle}) {\r\n    return (\r\n        <div>\r\n            <br />\r\n            <Tooltip title='programatical pattern to get to reciever`s/human SENSORS' placement='right-start'>\r\n                <h5 className='tip'>notification</h5>\r\n            </Tooltip>\r\n            <label>\r\n                <span>** Settings **</span>\r\n                <div className='check-group'>\r\n                    <label className='check-label'>\r\n                        <input type=\"checkbox\" \r\n                            onChange={(e) => {\r\n                                handle(e.target.checked)\r\n                            }}\r\n                        />\r\n                        <span>default</span>\r\n                    </label>\r\n                </div>\r\n            </label>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nfunction ChooseDate({handle, target}) {\r\n    const [isPreciseDate, setIsPreciseDate] = useState(false)\r\n    const [dateMode, setDateMode] = useState('precise')\r\n\r\n    let [from, setFrom] = useState()\r\n    let [to, setTo] = useState()\r\n\r\n    const earliestDateRef = React.useRef()\r\n    const latestDateRef = React.useRef()\r\n    const preciseDateRef = React.useRef()\r\n    const earliestHoursRef = React.useRef()\r\n    const latestHoursRef = React.useRef()\r\n\r\n    const endOfDay = '00:00'\r\n\r\n    const parseDate = function (previous, day, time = '') {\r\n        const value = new Date(day)\r\n        const hours = time.slice(0, 2) || previous?.getHours() || endOfDay.slice(0, 2)\r\n        const minutes = time.slice(-2) || previous?.getMinutes() || endOfDay.slice(-2)\r\n        console.log(value.toString())\r\n\r\n        console.log(hours + ' : ' + minutes)\r\n            \r\n        value.setHours(hours, minutes)\r\n\r\n        console.log(value.toString())\r\n\r\n        return value\r\n    }\r\n\r\n    const formatDate = (dateObject) => {\r\n        if (!(dateObject instanceof Date)) {\r\n            return {\r\n                date: 'unset',\r\n                time: ''\r\n            }\r\n        }\r\n        const daysOfWeek = [\r\n            'Monday',\r\n            'Tuesday', \r\n            'Wednesday', \r\n            'Thursday', \r\n            'Friday', \r\n            'Saturday', \r\n            'Sunday'\r\n            ]\r\n        const day = daysOfWeek[dateObject.getDay() - 1],\r\n              date = `0${dateObject.getDate()}`.slice(-2),\r\n              month = `0${dateObject.getMonth() + 1}`.slice(-2),\r\n              year = dateObject.getFullYear(),\r\n              minutes = `0${dateObject.getMinutes()}`.slice(-2),\r\n              hours = `0${dateObject.getHours()}`.slice(-2)\r\n              \r\n        return {\r\n            date: `${date}.${month}.${year}`,\r\n            time: ` ${hours}:${minutes}`,\r\n            serializedDate: `${year}.${month}.${date}`\r\n        } \r\n    }\r\n\r\n    return (\r\n        <div className='chapter-container'>\r\n            <Tooltip title='when MEASURMENT is conducted/ letter arrives' placement='right-start'>\r\n                <h5 className='tip'>date</h5>\r\n            </Tooltip>\r\n            <div className=\"chapter\">\r\n                <Tabs\r\n                    activeKey={dateMode}\r\n                    onSelect={(k) => setDateMode(k)}\r\n                >\r\n                    {/* approximate */}\r\n                    <Tab eventKey='approximate' title='Approximate date'>\r\n                        <div className='date-container'>\r\n                            <label className='date-label'>\r\n                                <span>from</span>\r\n                                <input type=\"date\" ref={earliestDateRef} placeholder='none'\r\n                                    onChange={(event) => {\r\n                                        const date = parseDate(from, event.target.value, endOfDay)\r\n                                        setFrom(date)\r\n                                        handle.from(date)\r\n                                    }}\r\n                                />\r\n                                <span>{formatDate(from).date}</span>\r\n                            </label>\r\n\r\n                            <label className='date-label'>\r\n                                <span>to</span>\r\n                                <input type=\"date\" ref={latestDateRef}\r\n                                    onChange={(event) => {\r\n                                        const date = parseDate(from, event.target.value, endOfDay)\r\n                                        setTo(date)\r\n                                        handle.to(date)\r\n                                    }}\r\n                                />\r\n                                <span>{formatDate(to).date}</span>\r\n                            </label>\r\n                        </div>\r\n                    </Tab>\r\n\r\n                    {/* precise */}\r\n                    <Tab eventKey='precise' title='Precise date'>\r\n                        <div className='date-container'>\r\n\r\n                            <label className='date-label'>\r\n                                <span>day:</span>\r\n                                <input type=\"date\" ref={preciseDateRef} placeholder='none'\r\n                                    onChange={(event) => {\r\n                                        const dateFrom = parseDate(from, event.target.value)\r\n                                        const dateTo = parseDate(to, event.target.value)\r\n\r\n                                        setFrom(dateFrom)\r\n                                        setTo(dateTo)\r\n\r\n                                        handle.from(dateFrom)\r\n                                        handle.to(dateTo)\r\n                                    }}\r\n                                />\r\n                                <span>{(formatDate(to).date == formatDate(from).date && formatDate(from).date) || 'unset'}</span>\r\n                            </label>\r\n\r\n                            <label className='date-label'>\r\n                                <span>from</span>\r\n                                <input type=\"time\" ref={earliestHoursRef}\r\n                                    onChange={(event) => {\r\n                                        const day = preciseDateRef.current.value || formatDate(new Date()).serializedDate\r\n                                        console.log(day)\r\n                                        const date = parseDate(from, day, event.target.value)\r\n                                        console.log(date)\r\n                                        setFrom(date)\r\n                                        handle.from(date)\r\n                                    }}\r\n                                />\r\n                                <span>{formatDate(from).time}</span>\r\n                            </label>\r\n\r\n                            <label className='date-label'>\r\n                                <span>to</span>\r\n                                <input type=\"time\" ref={latestHoursRef}\r\n                                    onChange={(event) => {\r\n                                        const day = preciseDateRef.current.value || formatDate(new Date()).serializedDate\r\n                                        const date = parseDate(to, day, event.target.value)\r\n                                        setTo(date)\r\n                                        handle.to(date)\r\n                                    }}\r\n                                />\r\n                                <span>{formatDate(to).time}</span>\r\n                            </label>\r\n                        </div>\r\n                    </Tab>\r\n                </Tabs>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FlightControl\r\n\r\n\r\n","//small data to differ the letter form the other letters\r\nimport Markup from './Markup'\r\n\r\n//logical expression which value will be deduced from response\r\nimport Expression from './Expression'\r\n\r\n//data to be used for response creation\r\nimport SourceData from './SourceData'\r\n\r\n//data used by computer for purposes of letter delivery\r\nimport FlightControl from './FlightControl'\r\n\r\nexport const fields = {Markup, Expression, SourceData, FlightControl}\r\n\r\nexport class Letter {\r\n    constructor() {\r\n        this.subClasses.forEach(Class => this[Class.forProperty] = new Class())\r\n    }\r\n\r\n    serialize() {\r\n        function serializeObject(object) {\r\n            const serialized = {}\r\n            Object.getOwnPropertyNames(object)\r\n                .filter(property => typeof object[property] !== 'function' || typeof object[property].serialize == 'function')\r\n                .map(property => {\r\n                    let target = object[property]\r\n                    if (typeof target.serialize == 'function') {\r\n                        serialized[property] = target.serialize()\r\n                        return\r\n                    }\r\n                    if (Array.isArray(target)) {\r\n                        target = serializeArray(target)\r\n                        if (target != undefined && target.length > 0) serialized[property] = target\r\n                        return\r\n                    }\r\n                    if (target instanceof Date) {\r\n                        serialized[property] = target.toUTCString()\r\n                        return\r\n                    }\r\n                    if (typeof target == 'object') {\r\n                        serialized[property] = serializeObject(target)\r\n                        return\r\n                    }\r\n                    serialized[property] = target\r\n                    return\r\n                })\r\n            return serialized\r\n        }\r\n\r\n        function serializeArray(arr) {\r\n            return arr.filter(item => typeof item !== 'function').map(item => typeof item == 'object' ? serializeObject(item) : (Array.isArray(item) ? serializeArray(item) : item))\r\n        }\r\n\r\n        return serializeObject(this)\r\n\r\n    }\r\n\r\n    subClasses = [\r\n        class Markup {\r\n            constructor() {\r\n                this.id = this.generateId()\r\n                this.name = 'letter #' + this.id\r\n            }\r\n            static forProperty = 'markup'\r\n\r\n            generateId() {\r\n                return Date.now()\r\n            }\r\n        },\r\n\r\n        class Expression {\r\n            constructor() {\r\n                this.expectedType = 'unknown'\r\n                this.text = 'unknown'\r\n            }\r\n            static forProperty = 'expression'\r\n        },\r\n\r\n        class SourceData {\r\n            constructor() {\r\n                this.subClasses.forEach(Class => this[Class.forProperty] = new Class())\r\n            }\r\n            static forProperty = 'sourceData'\r\n            subClasses = [\r\n                class Plain {\r\n                    constructor() {\r\n                        this.text = 'Should be some helpful text here'\r\n                        this.files = 'Should be some helpful files here'\r\n                    }\r\n                    static forProperty = 'plain'\r\n                },\r\n\r\n                class Social {\r\n                    constructor() {\r\n                        this.contacts = 'Should be some helpful passes beyond local system'\r\n                    }\r\n                    static forProperty = 'social'\r\n                },\r\n\r\n                class Neural {\r\n                    constructor() {\r\n                        this.generators = []\r\n                        this.instances = []\r\n                    }\r\n                    static forProperty = 'neural'\r\n                }\r\n            ]\r\n        },\r\n\r\n        class FlightControl {\r\n            constructor() {\r\n                this.time = {\r\n                    from: 'Date when the MEASURE becomes relevant',\r\n                    to: 'Date after which the MEASURE is not longer valid (responses will be no longer received)'\r\n                }\r\n                this.notification = {\r\n                    isDefault: false\r\n                }\r\n            }\r\n            static forProperty = 'flightControl'\r\n        }\r\n    ]\r\n}","import React from 'react'\r\nimport { useState, useEffect } from 'react'\r\n\r\nimport Tabs from '../../../Standalone components/Tabs/Tabs'\r\n\r\nimport folderImg from '../../../../img/icons/folder.png'\r\n\r\nfunction SourceData({ handle }) {\r\n\r\n    const textareaRef = React.createRef()\r\n    const [textareaValue, setTextareaValue] = useState('')\r\n\r\n    const changeTextareaSize = async () => {\r\n        textareaRef.current.style.height = 'inherit';\r\n        textareaRef.current.style.height = `${textareaRef.current.scrollHeight + 2}px`;\r\n    }\r\n\r\n    const tabs = [\r\n        {\r\n            title: 'Plain',\r\n            Content: function () {\r\n                return (\r\n                    <div className=\"content-container\">\r\n                        <label>\r\n                            <span>add text</span>\r\n                            <textarea key='1234' className='textarea' cols=\"25\" rows=\"4\" ref={textareaRef}\r\n                                onChange={(e) => {\r\n                                    setTextareaValue(e.target.value)\r\n                                    changeTextareaSize(e)\r\n                                    handle.plain.text(e.target.value)\r\n                                }}\r\n                                value={textareaValue}\r\n                            ></textarea>\r\n                        </label>\r\n                        <div className=\"drop-files-container\">\r\n                            <label className=\"drop-files\" style={{ transform: 'translate(-35%, 20%)' }}>\r\n                                <span>drop files</span>\r\n                                <img src={folderImg} className='drop-img' />\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            title: 'Social',\r\n            Content: function () {\r\n                return (\r\n                    <div>\r\n\r\n                    </div>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            title: 'Neural',\r\n            Content: function () {\r\n                return (\r\n                    <div>\r\n\r\n                    </div>\r\n                )\r\n            }\r\n        },\r\n    ]\r\n\r\n    return (\r\n        <div>\r\n            <fieldset className='main-fieldset'>\r\n                <Tabs tabs={tabs}/>\r\n            </fieldset> \r\n        </div>\r\n    )\r\n}\r\n\r\n// function tabs(handle, props) {\r\n//     return (\r\n//         [\r\n//             {\r\n//                 title: 'Plain',\r\n//                 Content: function () {\r\n//                     const textareaValue = props.plain.textareaValue\r\n//                     const setTextareaValue = props.plain.setTextareaValue\r\n\r\n//                     const textareaRef = React.createRef()\r\n\r\n//                     const changeTextareaSize = async () => {\r\n//                         textareaRef.current.style.height = 'inherit';\r\n//                         textareaRef.current.style.height = `${textareaRef.current.scrollHeight + 2}px`;\r\n//                     }\r\n//                     return (\r\n//                         <div className=\"content-container\">\r\n//                             <label>\r\n//                                 <span>add text</span>\r\n//                                 <textarea key='1234' className='textarea' cols=\"25\" rows=\"4\" ref={textareaRef}\r\n//                                     onChange={(e) => {\r\n//                                         setTextareaValue(e.target.value)\r\n//                                         changeTextareaSize(e)\r\n//                                         handle.plain.text(e.target.value)\r\n//                                     }}\r\n//                                     value={textareaValue}\r\n//                                 ></textarea>\r\n//                             </label>\r\n//                             <div className=\"drop-files-container\">\r\n//                                 <label className=\"drop-files\" style={{ transform: 'translate(-35%, 20%)' }}>\r\n//                                     <span>drop files</span>\r\n//                                     <img src={folderImg} className='drop-img' />\r\n//                                 </label>\r\n//                             </div>\r\n//                         </div>\r\n//                     )\r\n//                 }\r\n//             },\r\n//             {\r\n//                 title: 'Social',\r\n//                 Content: function () {\r\n//                     return (\r\n//                         <div>\r\n\r\n//                         </div>\r\n//                     )\r\n//                 }\r\n//             },\r\n//             {\r\n//                 title: 'Neural',\r\n//                 Content: function () {\r\n//                     return (\r\n//                         <div>\r\n\r\n//                         </div>\r\n//                     )\r\n//                 }\r\n//             }\r\n//         ]\r\n//     )\r\n// }\r\n\r\n\r\n\r\nexport default SourceData\r\n","import axios from 'axios';\r\n\r\nimport serverPath from \"../../../index\";\r\n\r\n\r\nexport const fetchData = async () => {\r\n    const response = await axios.get(serverPath + '/scheduledLetters');\r\n    return response.data\r\n}\r\n\r\nexport const postData = async (data) => {\r\n    const testDate = new Date()\r\n    testDate.setSeconds(parseInt(testDate.getSeconds() + 10))\r\n    data.flightControl.time.from = testDate.toISOString()\r\n    data.flightControl.time.to = testDate.toISOString()\r\n    console.log(serverPath + '/scheduledLetters')\r\n    const response = await axios.post(serverPath + '/scheduledLetters', data);\r\n    return response.data\r\n}","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { fetchData, postData } from './API'\r\n\r\n//** important:  ALWAYS REINITIALIZE ARRAY \r\n\r\nconst initialState = {\r\n//   foo: false,\r\n  // awaitingLettersData: [],\r\n  status: 'idle',\r\n};\r\n\r\n// export const fetchAwaitingLetters = createAsyncThunk('awaitingLetters/fetchAwaitingLetters', async () => fetchData())\r\nexport const postLetter = createAsyncThunk('awaitingLetters/postLetter', async (letter) => postData(letter))\r\n\r\nexport const Slice = createSlice({\r\n  name: 'awaitingLetters',\r\n  initialState,\r\n  reducers: {\r\n    // togglefoo: (state) => {\r\n    //   state.foo = !state.foo;\r\n    // }\r\n  },\r\n  // extraReducers: {\r\n  //   [fetchAwaitingLetters.fulfilled]: (state, { payload }) => {\r\n  //     state.awaitingLettersData = payload\r\n  //     state.status = 'success'\r\n  //   },\r\n  // }\r\n});\r\n\r\n// export const { togglefoo } = Slice.actions;\r\n\r\n// export const selectFoo = (state) => state.header.foo;\r\n\r\nexport default Slice.reducer;","import axios from \"axios\";\r\nimport { urlBase64ToUint8Array } from \"./calculator\";\r\nimport serverPath from \"../index\";\r\n\r\n\r\nexport default async function subscribePushNotifications(id) {\r\n  // if ('serviceWorker' in navigator) {\r\n  //   const response = await axios.get(serverPath + '/publicVapidKey')\r\n  //   const publicVapidKey = response.data\r\n  //   const register = await navigator.serviceWorker.register(`${process.env.PUBLIC_URL}/serviceWorker.js`)\r\n\r\n\r\n  //     await register.pushManager.subscribe({\r\n  //       userVisibleOnly: true,\r\n  //       applicationServerKey: urlBase64ToUint8Array(publicVapidKey)\r\n  //     }).then(subscription => {\r\n  //       axios.post(serverPath + '/subscription', {subscription, id})\r\n  //     })\r\n\r\n      \r\n  // }\r\n  \r\n    \r\n}","import './style.sass'\r\n\r\nimport React from 'react'\r\nimport { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport Tabs from 'react-bootstrap/Tabs'\r\nimport Tab from 'react-bootstrap/Tab'\r\nimport { fields } from './Fields/API'\r\nimport { Letter } from './Fields/API'\r\n\r\nimport { postLetter } from './slice'\r\nimport subscribePushNotifications from '../../../utils/subscribePushNotifications'\r\n\r\n\r\nfunction CreateLetterForm() {\r\n    const dispatch = useDispatch()\r\n\r\n    const [selectedField, setSelectedField] = useState('Markup')\r\n    const [currentLetter, setCurrentLetter] = useState(new Letter())\r\n\r\n    const tabs = [\r\n        {\r\n            title: 'Markup',\r\n            handle: {\r\n                name: function (value) {\r\n                    currentLetter.markup.name = value\r\n                    setCurrentLetter(currentLetter)\r\n                },\r\n            },\r\n            Content: fields.Markup\r\n        },\r\n        {\r\n            title: 'Expression',\r\n            handle: {\r\n                expectedType: function (value) {\r\n                    currentLetter.expression.expectedType = value\r\n                    setCurrentLetter(currentLetter)\r\n                },\r\n                text: function (value) {\r\n                    currentLetter.expression.text = value\r\n                    setCurrentLetter(currentLetter)\r\n                },\r\n            },\r\n            Content: fields.Expression\r\n        },\r\n        {\r\n            title: 'Source Data',\r\n            handle: {\r\n                plain: {\r\n                    text: function (value) {\r\n                        currentLetter.sourceData.plain.text = value\r\n                        setCurrentLetter(currentLetter)\r\n                    },\r\n                }\r\n            },\r\n            Content: fields.SourceData\r\n        },\r\n        {\r\n            title: 'Flight Control',\r\n            handle: {\r\n                time: {\r\n                    from: function (value) {\r\n                        //console.log(value.toString())\r\n                        currentLetter.flightControl.time.from = value\r\n                        //console.log(currentLetter.flightControl.time.from)\r\n                        setCurrentLetter(currentLetter)\r\n                        //console.log(currentLetter)\r\n                    },\r\n                    to: function (value) {\r\n                        currentLetter.flightControl.time.to = value\r\n                        setCurrentLetter(currentLetter)\r\n                    },\r\n                },\r\n                notification: function (value) {\r\n                    currentLetter.flightControl.notification.isDefault = value\r\n                    setCurrentLetter(currentLetter)\r\n                },\r\n            },\r\n            Content: fields.FlightControl\r\n        }\r\n    ]\r\n\r\n\r\n    return (\r\n        <div className='create-letter-form'>\r\n            <Tabs activeKey={selectedField} onSelect={(k) => setSelectedField(k)}>\r\n                {\r\n                    tabs.map((tab, index) =>\r\n                        <Tab title={tab.title} eventKey={tab.title}>\r\n                            <tab.Content handle={tab.handle} target={currentLetter} />\r\n                        </Tab>\r\n                    )\r\n                }\r\n            </Tabs>\r\n            <button className='btn btn-block'\r\n                onClick={() => {\r\n                    dispatch(postLetter(currentLetter.serialize()))\r\n                    console.log('subscribing...')\r\n                    subscribePushNotifications(currentLetter.markup.id)\r\n                    //console.log(currentLetter.serialize())\r\n                }}\r\n            >Submit</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateLetterForm\r\n","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Modal from '@material-ui/core/Modal';\r\n\r\nimport { toggleShow } from './slice'\r\n\r\nimport CreateLetterForm from './CreateLetterForm/CreateLetterForm'\r\n\r\n\r\nfunction CreateLetterModal() {\r\n\r\n    const dispatch = useDispatch()\r\n    const show = useSelector(state => state.createLetterModal.show)\r\n    const handleClose = () => dispatch(toggleShow())\r\n    \r\n    return (\r\n        <div>\r\n            <button type=\"button\" \r\n                // onClick={handleOpen}\r\n            >\r\n                Open Modal\r\n            </button>\r\n            <Modal\r\n                open={show}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n            >\r\n                <CreateLetterForm />\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateLetterModal\r\n","import React from 'react'\r\nimport { Link, useLocation } from 'react-router-dom'\r\n\r\nfunction Footer() {\r\n    const location = useLocation()\r\n    return (\r\n        <footer>\r\n            <p>Copyright &copy; 2021</p>\r\n            {location.pathname === '/' && <Link to=\"/about\">About</Link>}\r\n            \r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nfunction About() {\r\n    return (\r\n        <div>\r\n            <h4>Version 1.0.0</h4>\r\n            <Link to=\"/\">Go back</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About\r\n","import React from 'react'\r\n\r\n// TO DO add view mode log record and hide arrow\r\n\r\nfunction LogRecord({logRecord}) {\r\n    const thisHours = `0${new Date(logRecord.date).getUTCHours()}`.slice(-2),\r\n          thisMinutes = `0${new Date(logRecord.date).getUTCMinutes()}`.slice(-2)\r\n    return (\r\n        <div className='log-record'>\r\n            {logRecord.type == 'task' && <p>Виконано завдання:</p>}\r\n            <h3>{logRecord.header}</h3>\r\n            <p>{logRecord.text}</p>\r\n            <p>{logRecord.other?.trigger && `trigger:  ${logRecord.other.trigger}` }</p>\r\n            <p className='logrecord-time'>{`${thisHours}:${thisMinutes}`}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LogRecord\r\n\r\n// {\r\n//     \"id\": 1623615813055,\r\n//     \"text\": \"\",\r\n//     \"other\": {\r\n//       \"isReminder\": false,\r\n//       \"trigger\": \"no explantion/random\"\r\n//     },\r\n//     \"date\": 1623615976554\r\n//   },\r\n","import React from 'react'\r\nimport axios from 'axios'\r\n\r\nimport serverPath from \"../../index\";\r\n\r\nfunction TextareaForm({onSend, autosaveAdress = false}) {\r\n    let textareaRef = React.useRef(null)\r\n\r\n        // saves textarea in case of page reload \r\n        // React.useEffect(() => {\r\n        //     autosaveAdress && ( async () => {\r\n        //         const response = await axios.get(serverPath + `/autosave/${autosaveAdress}`)\r\n        //         textareaRef.current.value =response.data.value\r\n        //     })()\r\n        // },[])\r\n    \r\n        // React.useEffect(() => setInterval( () => {\r\n        //     textareaRef.current && autosaveAdress &&\r\n        //     axios.put(serverPath + `/autosave/${autosaveAdress}`, {id:`${autosaveAdress}`, value: `${textareaRef.current.value}` })\r\n        // } , 5000\r\n        // ),[])\r\n\r\n    //changes size according to text\r\n    const changeTextareaSize = async () => {\r\n        textareaRef.current.style.height = 'inherit';\r\n        textareaRef.current.style.height = `${textareaRef.current.scrollHeight +2}px`;\r\n    }\r\n    return (\r\n        <div className='logtextarea-container'>\r\n            <textarea \r\n                ref={textareaRef}\r\n                onChange={changeTextareaSize}\r\n                className='log-textarea'>\r\n            </textarea>\r\n            <img className='send-button' \r\n                onClick={\r\n                    () => {\r\n                        onSend(textareaRef.current.value)\r\n                        textareaRef.current.value = ''\r\n                    }\r\n                }\r\n                src=\"https://image.flaticon.com/icons/png/512/60/60525.png\" alt=\"\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TextareaForm\r\n","import React from 'react'\r\nimport {postLogRecord} from './logSlice'\r\nimport {useDispatch} from 'react-redux'\r\nimport axios from 'axios'\r\nimport TextareaForm from '../Standalone components/TextareaForm'\r\n\r\nfunction LogTextArea() {\r\n    \r\n    const dispatch = useDispatch()\r\n\r\n    //sends textarea to log\r\n    const onSend = async (textareaValue, header = '') => {\r\n        const currentLogRecord = {\r\n            type: 'text record',\r\n            id: Date.now(),\r\n            header,\r\n            text: textareaValue,\r\n            date: Date.now()\r\n        }\r\n        console.log(currentLogRecord)\r\n       await dispatch(postLogRecord(currentLogRecord))\r\n    }\r\n\r\n    return (\r\n        <TextareaForm onSend={onSend} autosaveAdress={'log-textarea'}/>\r\n    )\r\n}\r\n\r\nexport default LogTextArea\r\n","import React from 'react'\r\nimport {useSelector} from 'react-redux'\r\nimport LogRecord from './LogRecord'\r\nimport LogTextArea from './LogTextArea';\r\n\r\nfunction Log() {\r\n    const log = useSelector((state) => state.log.logData)\r\n    const monthNames =[\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\",\"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\r\n    return (\r\n        <div className='log-container'>\r\n            {\r\n                log.slice(0).reverse().map((logRecord, index, log) => {\r\n                    const thisDate = new Date(log[index].date).getUTCDate(),\r\n                         todayDate = new Date(Date.now()).getUTCDate(),\r\n                         nextDate = new Date(log[index - 1]?.date).getUTCDate() || todayDate,\r\n                         thisMonth = new Date(log[index].date).getUTCMonth(),\r\n                         todayMonth = new Date(Date.now()).getUTCMonth(),\r\n                         nextMonth = new Date(log[index - 1]?.date).getUTCMonth() || todayMonth\r\n                    return (\r\n                        <div>\r\n                            <LogRecord logRecord={logRecord} key={logRecord.id}/> \r\n                            {\r\n                                (nextDate > thisDate || nextMonth > thisMonth) && \r\n                                    <div className ='log-datelabel'>\r\n                                        {`${monthNames[nextMonth + 1]} ${`0${nextDate}`.slice(-2)}`} \r\n                                    </div>  \r\n                            }\r\n                        </div>     \r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Log\r\n","import { createSlice, createAsyncThunk, current } from '@reduxjs/toolkit'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport axios from 'axios'\r\n\r\nimport serverPath from \"../../../index\";\r\n\r\nconst initialState = {\r\n  articlesData: [123],\r\n  status: 'idle',\r\n};\r\n\r\nexport const fetchArticles = createAsyncThunk('articles/fetchArticles', async () => {\r\n  const response = await axios.get(serverPath + '/articles');\r\n  return response.data\r\n})\r\n\r\nexport const postArticle = createAsyncThunk('articles/postArticle', async (article) => {\r\n  await axios.put(serverPath + `/articles/${article.id}`, article)\r\n  return article\r\n})\r\n\r\nexport const articlesSlice = createSlice({\r\n  name: 'articles',\r\n  initialState,\r\n  reducers: {\r\n  },\r\n  extraReducers: {\r\n    // [fetchTasks.pending]: (state, action) => {\r\n    //   state.status = 'loading'\r\n    // },\r\n    [fetchArticles.fulfilled]: (state, { payload }) => {\r\n      state.articlesData = payload\r\n      state.status = 'success'\r\n    },\r\n    [postArticle.fulfilled]: (state, { payload }) => {\r\n      state.articlesData.push(payload)\r\n      state.status = 'success'\r\n      console.log(current(state.articlesData))\r\n    }\r\n   }\r\n})\r\n\r\nexport const selectArticles = (state) => state.tasks.articlesData\r\n\r\n// export const { fetchTasks, check } = tasksSlice.actions\r\n\r\nexport default articlesSlice.reducer","import React from 'react'\r\nimport Button from '../../../Standalone components/Button'\r\nimport {useDispatch} from 'react-redux'\r\nimport {postArticle} from '../articlesSlice'\r\nimport axios from 'axios'\r\n\r\nfunction Article({article = {}}) {\r\n    const dispatch = useDispatch()\r\n\r\n    const headerRef = React.createRef(null)\r\n    const textRef = React.createRef(null)\r\n    const [editable, setEditable] = React.useState(false)\r\n    \r\n    const onSend = async (header, text = '', type = '') => {\r\n        const currentArticle = {\r\n            type,\r\n            id: article.id ? article.id : Date.now(),\r\n            header,\r\n            text,\r\n            date: article.date || Date.now()\r\n        }\r\n        console.log(currentArticle)\r\n       await dispatch(postArticle(currentArticle))\r\n    }\r\n\r\n    //autosize\r\n\r\n    const changeTextareaSize = async () => {\r\n        textRef.current.style.height = 'inherit';\r\n        textRef.current.style.height = `${textRef.current.scrollHeight +2}px`;\r\n        headerRef.current.style.height = 'inherit';\r\n        headerRef.current.style.height = `${headerRef.current.scrollHeight +2}px`;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <header className=\"header\">\r\n                <textarea \r\n                    className={`header-textarea${editable ? '' : '-disabled'}`} \r\n                    placeholder={editable && 'Title of the article'}\r\n                    ref={headerRef}\r\n                    readOnly={!editable}\r\n                    onChange={changeTextareaSize}\r\n                >\r\n                </textarea>\r\n                <Button \r\n                    text={editable ? 'post' : 'edit'}\r\n                    onClick={\r\n                        () => {\r\n                            // editable ? autosaveDelete() && onSend(headerRef.current.value, textRef.current.value) : autosaveEnable()  \r\n                            // setEditable(!editable)\r\n                        }\r\n                    }\r\n                />\r\n            </header>\r\n            <textarea \r\n                className={`content-textarea${editable ? '' : '-disabled'}`}\r\n                placeholder={editable && 'Content of the article'}\r\n                ref={textRef}\r\n                readOnly={!editable}\r\n                onChange={changeTextareaSize}\r\n            >\r\n            </textarea>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Article\r\n","/* eslint-disable no-use-before-define */\r\nimport React from 'react';\r\nimport { useEffect } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete, { createFilterOptions } from '@material-ui/lab/Autocomplete';\r\n\r\nconst filter = createFilterOptions();\r\n\r\nexport default function FreeSoloCreateOption({options, style, handleValue}) {\r\n  const [value, setValue] = React.useState(null);\r\n  const [inputValue, setInputValue] = React.useState(null);\r\n\r\n  useEffect(() => {\r\n    handleValue(value?.title)\r\n  }, [value])\r\n\r\n  return (\r\n    <Autocomplete\r\n      style={style}\r\n      value={value}\r\n      onChange={(event, newValue) => {\r\n        console.log(event.target.newValue);\r\n        if (typeof newValue === 'string') {\r\n          setValue({\r\n            title: newValue,\r\n          });\r\n        } else if (newValue && newValue.inputValue) {\r\n          // Create a new value from the user input\r\n          setValue({\r\n            title: newValue.inputValue,\r\n          });\r\n        } else {\r\n          setValue(newValue);\r\n        }\r\n      }}\r\n      onInputChange={(event, newInputValue) => {\r\n        setInputValue(newInputValue);\r\n        console.log(inputValue);\r\n      }}\r\n      filterOptions={(options, params) => {\r\n        const filtered = filter(options, params);\r\n\r\n        // Suggest the creation of a new value\r\n        if (params.inputValue !== '') {\r\n          filtered.push({\r\n            inputValue: params.inputValue,\r\n            title: `Add \"${params.inputValue}\"`,\r\n          });\r\n        }\r\n\r\n        return filtered;\r\n      }}\r\n      selectOnFocus\r\n      clearOnBlur\r\n      handleHomeEndKeys\r\n      id=\"free-solo-with-text-demo\"\r\n      options={options}\r\n      getOptionLabel={(option) => {\r\n        // Value selected with enter, right from the input\r\n        if (typeof option === 'string') {\r\n          return option;\r\n        }\r\n        // Add \"xxx\" option created dynamically\r\n        if (option.inputValue) {\r\n          return option.inputValue.toString();\r\n        }\r\n        // Regular option\r\n        return (option.title?.toString() || '');\r\n      }}\r\n      renderOption={(option) => option.title?.toString() || ''}\r\n      freeSolo\r\n      renderInput={(params) => (\r\n        <div ref={params.InputProps.ref}>\r\n          <input style={ style} type=\"text\" {...params.inputProps} />\r\n        </div>\r\n      )}\r\n    />\r\n  );\r\n}","\r\n//TODO: add causes of variants (triggers)\r\nexport class EventData {\r\n    constructor() {\r\n        this.isNotEmpty = false\r\n        this.events = []\r\n        this.id = Date.now()\r\n        this.load = () => {\r\n            this.isNotEmpty = true\r\n            return this\r\n        }\r\n        this.setName = (name) => {\r\n            this.name = name\r\n            return this\r\n        }\r\n        this.addEvent = (choiceName, eventName) => {\r\n            this.events = [...this.events, {choiceName, eventName}]\r\n            this.load()\r\n            return this\r\n        }\r\n        this.receiveEvent = (choiceName, eventName) => {\r\n            this.events = this.events.filter(item => item.choiceName !== choiceName) \r\n            this.addEvent(choiceName, eventName)\r\n            return this\r\n        }\r\n        this.serialize = () => {\r\n            return {\r\n                id: this.id,\r\n                name: this.name,\r\n                events: this.events\r\n            }\r\n        }\r\n        this.deserialize = (eventData) => {\r\n            const instance = new EventData().setName(eventData.name)\r\n            instance.id = eventData.id\r\n            eventData.events.forEach((item) => instance.addEvent(item.choiceName, item.eventName))\r\n            return instance\r\n        }\r\n    }\r\n}\r\n\r\nexport class Choice {\r\n    constructor(name, variants = []) {\r\n        this.name = name\r\n        this.variants = variants\r\n        this.addVariant = (variant) => {\r\n            this.variants = [...this.variants, variant]\r\n            return this\r\n        }\r\n        this.receiveVariant = (variant) => {\r\n            let index = this.variants.findIndex(item => item?.name == variant?.name) \r\n\r\n            if (index > -1) {\r\n                this.variants[index]?.addWeight()\r\n            } else {\r\n                    this.addVariant(variant)\r\n            }        \r\n            return this\r\n        }\r\n        this.serializeVariants = () => {\r\n            return this.variants?.map(variant => variant.serialize())\r\n        }\r\n        this.serialize = () => {\r\n            return {\r\n                name: this.name,\r\n                variants: this.serializeVariants()\r\n            }\r\n        }\r\n        this.deserialize = (choice) => {\r\n            const instance = new Choice(choice.name, choice.variants?.map(variant => new Variant().deserialize(variant)))\r\n            return instance\r\n        }\r\n    }\r\n}\r\n\r\n export class Variant {\r\n    constructor() {\r\n        this.id = Date.now()\r\n        this.name = ''\r\n        this.weight = 0\r\n        this.choices = []\r\n        this.causes = []\r\n\r\n        this.receiveName = (name) => {\r\n            !this.name && (this.name = name)\r\n            return this\r\n        }\r\n        this.addWeight = () => {\r\n            this.weight++\r\n            return this\r\n        }\r\n        this.addChoice = (choice) => {\r\n            this.choices = [\r\n                ...this.choices, \r\n                choice\r\n            ]\r\n            return this\r\n        }\r\n        this.receiveChoice = (choice) => {\r\n            let index = this.choices.findIndex(item => item?.name == choice?.name) \r\n            if (index > -1) {\r\n                choice.variants.forEach(variant => this.choices[index].receiveVariant(variant))\r\n            } else {\r\n                this.addChoice(choice)\r\n            }\r\n            return this\r\n        }\r\n        this.addData = (eventData) => {\r\n            console.log(eventData.name)\r\n            this.receiveName(eventData.name)\r\n\r\n            eventData.isNotEmpty && this.addWeight()\r\n\r\n            eventData.events?.forEach(event => {\r\n                const newVariant = new Variant().addData({name: event.eventName, isNotEmpty: true})\r\n                const newChoice = new Choice(event.choiceName).receiveVariant(newVariant)\r\n                this.receiveChoice(newChoice)\r\n            })\r\n            return this\r\n        }\r\n        this.serializeChoices = () => {\r\n            return this.choices?.map(choice => choice.serialize())\r\n        }\r\n        this.serialize = () => {\r\n            return {\r\n                id: this.id,\r\n                name: this.name,\r\n                choices: this.serializeChoices(),\r\n                weight: this.weight,\r\n                causes: this.causes\r\n            }\r\n        }\r\n        this.deserialize = (variant) => {\r\n            const instance = new Variant().receiveName(variant.name)\r\n            instance.id = variant.id\r\n            instance.choices = variant.choices?.map(choice => new Choice().deserialize(choice))\r\n            for (variant.weight; variant.weight > 0; variant.weight--) {\r\n                instance.addWeight()\r\n            }\r\n            return instance\r\n        }\r\n    }\r\n}","import axios from 'axios';\r\nimport {Variant} from './Variant/API'\r\nimport serverPath from \"../../index\";\r\n\r\n\r\nexport const fetchData = async () => {\r\n    let response = await axios.get(serverPath + '/variants');\r\n    response.data = response.data.map(variant => new Variant().deserialize(variant))\r\n    return response.data\r\n}\r\n\r\nexport const postData = async (eventsData) => {\r\n    const variantsData = await fetchData()\r\n    console.log(variantsData);\r\n    const response = eventsData.map(async (data) => {\r\n        let response\r\n        let sendData\r\n        let dataTarget = variantsData.find(variant => variant.name == data.name)\r\n        console.log(dataTarget);\r\n        if (dataTarget) {\r\n            sendData =  new Variant().deserialize(dataTarget).addData(data).serialize()\r\n            response = await axios.put(serverPath + `/variants/${dataTarget.id}`, sendData)\r\n        } else {\r\n            sendData = new Variant().receiveName(data.name).addData(data).serialize()\r\n            response = await axios.post(serverPath + '/variants', sendData)\r\n        }\r\n        console.log(123);\r\n        return response\r\n    })\r\n    return response\r\n}\r\n\r\nexport const deleteData = async (id) => {\r\n    const response = await axios.post(serverPath + '/foo');\r\n    return response.data\r\n}\r\n\r\nexport const changeData = async (variant) => {\r\n    const response = await axios.put(serverPath + '/foo');\r\n    return response.data\r\n}\r\n\r\n\r\n","import { createSlice, createAsyncThunk, current } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\nimport { fetchData, postData, deleteData, changeData } from './API'\r\nimport { Variant, EventData, Choice } from './Variant/API';\r\n\r\n\r\n\r\n\r\nconst initialState = {\r\n  variantsData: [],\r\n  eventsData: [],\r\n  status: 'idle',\r\n};\r\n\r\nexport const fetchVariants = createAsyncThunk('variants/fetchVariants', async () => fetchData())\r\nexport const postEvents = createAsyncThunk('variants/postVariants', async (eventsData) => postData(eventsData))\r\nexport const deleteVariants = createAsyncThunk('variants/deleteVariants', async (id) => deleteData(id))\r\nexport const changeVariants = createAsyncThunk('variants/changeVariants', async (variant) => changeData(variant))\r\n\r\nexport const variantsSlice = createSlice({\r\n  name: 'variants',\r\n  initialState,\r\n  reducers: {\r\n    addEventData: (state, {payload}) => {\r\n      state.eventData = [...state.eventData, payload.data]\r\n    },\r\n    createAllEventsData: (state) => {\r\n      state.eventsData = state.variantsData.map(variant => new EventData().setName(variant.name))\r\n    },\r\n    receiveEvent: (state, {payload}) => {\r\n      state.eventsData = state.eventsData.map(item => {\r\n        if (item.name == payload.name) return item.receiveEvent(payload.event.choiceName, payload.event.variantName)\r\n        return item\r\n      })\r\n    },\r\n    addVariant: (state, {payload}) => {\r\n      state.variantsData = [...state.variantsData, payload]\r\n      state.eventsData = [...state.eventsData, new EventData().setName(payload.name)]\r\n    },\r\n    addChoice: (state, { payload }) => {\r\n      state.variantsData = state.variantsData.map(item => {\r\n        if (item.id == payload.id) return item.receiveChoice(new Choice(payload.choiceName))\r\n        return item\r\n      })\r\n    },\r\n    addVariantToChoice: (state, {payload}) => {\r\n      state.variantsData = state.variantsData.map(variant => {\r\n        variant.choices = variant.choices.map(choice => {\r\n          if (choice.name == payload.choiceName) return choice.receiveVariant(payload.variant)\r\n          return choice\r\n        })\r\n        return variant\r\n      })\r\n    }\r\n  },\r\n  extraReducers: {\r\n    [fetchVariants.fulfilled]: (state, { payload }) => {\r\n      state.variantsData = payload\r\n      state.eventsData = state.variantsData.map(variant => new EventData().setName(variant.name))\r\n      console.log(current(state).variantsData)\r\n      state.status = 'success'\r\n    },\r\n    [postEvents.fulfilled]: (state, { payload }) => {\r\n      console.log(payload);\r\n      state.status = 'success'\r\n    },\r\n    [deleteVariants.fulfilled]: (state, action) => {\r\n      state.variantsData = state.variantsData.filter((task) => task.id !== action.payload)\r\n    },\r\n    [changeVariants.fulfilled]: (state, action) => {\r\n      state.variantsData = state.variantsData.map((task) => {\r\n\r\n        if (task.id == action.payload.id) {\r\n          task = action.payload\r\n        }\r\n        return task\r\n      })\r\n    }\r\n  }\r\n});\r\n\r\nexport const { addEventData, modifyEventData, addChoice, addVariant, addVariantToChoice, createAllEventsData, receiveEvent } = variantsSlice.actions;\r\n\r\nexport default variantsSlice.reducer;","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport '../style.sass'\r\nimport {addVariantToChoice} from '../../slice'\r\nimport {Variant} from '../API'\r\nimport ComboBox from '../../../Standalone components/ComboBox'\r\n\r\nfunction Choice({ choice, type = 'unfolded', handle }) {\r\n    const dispatch = useDispatch()\r\n    const [currentChecked, setCurrentChecked] = React.useState()\r\n    const handleChoiceClick = (variant, index) => {\r\n        handle(choice.name, variant.name)\r\n        setCurrentChecked(index)\r\n    }\r\n    const handleAddVariant = (variantName = prompt('Give name to a variant:').toLocaleLowerCase()) => {\r\n        const variant = new Variant().receiveName(variantName)\r\n        dispatch(addVariantToChoice({choiceName: choice.name, variant}))\r\n    }\r\n    return (\r\n        <>\r\n            {\r\n                type == 'unfolded' \r\n\r\n                &&\r\n\r\n                <div className=\"choice\">\r\n                    <label className='choice-name'>{choice.name}</label>\r\n                    {\r\n                        choice.variants.map((variant, index) =>\r\n                        <div className='variant-name' style={currentChecked == index ? { backgroundColor: '#66ff99' } : null}\r\n                            onClick={() => handleChoiceClick(variant, index)}\r\n                        >{variant.name + ': ' + variant.weight}</div>\r\n                        )\r\n                    }\r\n                    <div className='add-variant-button' onClick={() => handleAddVariant()}>Add</div>\r\n                </div>\r\n            }\r\n            {\r\n                type == 'folded'\r\n\r\n                &&\r\n\r\n                <ComboBox\r\n                    options={(() => choice.variants.map(variant => {\r\n                        return {\r\n                            title: variant.name\r\n                        }\r\n                    }))(choice)\r\n                    }\r\n                    handleValue={(variantName) => {\r\n                        if (variantName) handle(choice.name, variantName)\r\n                    }}\r\n                    style={{ width: '100px', height: 30, padding: 0, marginLeft: 5, marginRight: 10 }}\r\n                />\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Choice\r\n","import React from 'react'\r\nimport { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport './style.sass'\r\nimport ComboBox from '../../Standalone components/ComboBox'\r\nimport { Combobox } from '@reach/combobox'\r\nimport { VariantClass, EventData } from './API'\r\nimport Choice from './Choice/Choice'\r\nimport { addEventData, receiveEvent, addChoice } from '../slice'\r\n\r\n\r\nfunction Variant({ variant }) {\r\n    //TODO: gather only values of class to before post (and reverse)\r\n    //TODO: ask for choice name when adding choice\r\n    const dispatch = useDispatch()\r\n    //variant = useSelector(state => state.variants.variantsData[state.variants.variantsData.findIndex(item => item.id == variant.id)])\r\n\r\n    const [folded, setFold] = React.useState(true)\r\n    const handleChoice = (choiceName, chosenVariantName) => {\r\n       dispatch(receiveEvent({name: variant.name, event: {choiceName, variantName: chosenVariantName}}))\r\n    }\r\n    const handleAddChoice = (choiceName = prompt('Give name to a choice:').toLowerCase()) => {\r\n        dispatch(addChoice({id:variant.id, choiceName}))\r\n    }\r\n    return (\r\n        <div className={`container${folded ? ' folded' : ''}`}>\r\n            <button className=\"fold-unfold\"\r\n                style={folded ? { backgroundImage: 'url()' } : { backgroundImage: 'url()' }}\r\n                onClick={() => { setFold(!folded) }}\r\n            ></button>\r\n\r\n            <div className='choices-container'>\r\n                {\r\n                    folded\r\n                        ?\r\n                        <>\r\n                            <h3>{variant.name + ': ' + variant.weight}</h3>\r\n                            {\r\n                                variant.choices.map((choice) =>\r\n                                    <Choice choice={choice} handle={handleChoice} type='folded' />\r\n                                )\r\n                            }\r\n                        </>\r\n                        :\r\n                        <>\r\n                            <div className=\"choice\">\r\n                                <label className='choice-name'>Variant</label>\r\n                                <h3 className='variant-name'>{variant.name + ': ' + variant.weight}</h3>\r\n                            </div>\r\n                            {\r\n                                variant.choices.map((choice) =>\r\n                                    <Choice choice={choice} handle={handleChoice} type='unfolded' />\r\n                                )\r\n                            }\r\n                        </>\r\n                }\r\n            </div>\r\n            <button className=\"add-choice-button\" onClick={() => handleAddChoice()}></button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Variant\r\n","import React from 'react'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\n//* однойменну функцію-конструктор Variant декларуємо як VariantFunction\r\nimport VariantFunction from './Variant/Variant'\r\nimport { Variant } from './Variant/API'\r\nimport { fetchVariants, addVariant } from './slice'\r\n\r\nfunction Variants() {\r\n    const dispatch = useDispatch()\r\n    const variants = useSelector(state => state.variants.variantsData)\r\n\r\n    React.useEffect(() => {\r\n        dispatch(fetchVariants())\r\n    }, [dispatch])\r\n    const handleAddVariant = (name = prompt('Give name to a variant:').toLowerCase()) => {\r\n        const newVar = new Variant().receiveName(name)\r\n        dispatch(addVariant(newVar))\r\n    }\r\n    return (\r\n        <>\r\n            {   \r\n            (() => {\r\n                    return variants.map(item => <VariantFunction variant={item} />)\r\n                })(variants)\r\n            }\r\n            <button onClick={() => handleAddVariant()} className='add-variant-button big'>Add variant</button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Variants\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {Modal} from 'react-bootstrap'\r\nimport Variant from '../Variants/Variant/Variant'\r\nimport Variants from '../Variants/Variants'\r\nimport './style.sass'\r\nimport {createAllEventsData, fetchVariants, postEvents} from '../Variants/slice'\r\nimport { toggleMindScrapModal } from './MindScrapModal/slice'\r\n\r\nfunction MindScrapForm() {\r\n\r\n    const dispatch = useDispatch()\r\n    const eventsData = useSelector(state => state.variants.eventsData)\r\n    const variantsData = useSelector(state => state.variants.variantsData)\r\n\r\n    return (\r\n        <div className=\"this-container\">\r\n            <Variants />\r\n            <input className='btn btn-block' type=\"submit\" value=\"Save Events\" onClick={() => {\r\n                dispatch(postEvents(eventsData))\r\n                dispatch(toggleMindScrapModal())\r\n            }}/>\r\n            <div className=\"to-do\">div - form, prevent default for button</div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default MindScrapForm\r\n","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport {Modal} from 'react-bootstrap'\r\nimport MindScrapForm from '../MindScrapForm'\r\nimport { toggleMindScrapModal } from './slice'\r\n\r\nfunction MindScrapperModal() {\r\n    const dispatch = useDispatch()\r\n    const show = useSelector(state => state.mindScrapModal.show)\r\n    return (\r\n        <div>\r\n            <Modal show={show} onHide={() => dispatch(toggleMindScrapModal())} contentClassName='modal-90-content' dialogClassName='modal-90-dialog' centered>\r\n                <Modal.Header>Open your mind. Litrally</Modal.Header>\r\n                <Modal.Body>\r\n                    <MindScrapForm />\r\n                </Modal.Body>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MindScrapperModal\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\n\r\nconst initialState = {\r\n  showDetails: '',\r\n  status: 'idle',\r\n};\r\n\r\nexport const detailsSlice = createSlice({\r\n  name: 'details',\r\n  initialState,\r\n  // The `reducers` field lets us define reducers and generate associated actions\r\n  reducers: {\r\n    setShowDetails: (state, {payload}) => {\r\n      state.showDetails = payload;\r\n    }\r\n  }\r\n});\r\n\r\nexport const { setShowDetails } = detailsSlice.actions;\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\r\nexport const selectShowDetails = (state) => state.details.showDetails;\r\n\r\nexport default detailsSlice.reducer;","import axios from \"axios\";\r\nimport path from \"../../../index\";\r\n\r\nexport async function answerLetter(id, data) {\r\n    axios.post(path + '/answerLetter', { id, data })\r\n}","import React from 'react'\r\nimport axios from 'axios'\r\nimport { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { FaTimes } from 'react-icons/fa'\r\n\r\nimport { fetchLog, postLogRecord } from '../../TheLog/logSlice'\r\n\r\nimport TextareaForm from '../../Standalone components/TextareaForm'\r\nimport Details from '../../Details/Details'\r\n\r\nimport { setShowDetails } from '../../Details/detailsSlice'\r\nimport { answerLetter } from './API'\r\nimport { fetchInbox } from '../slice'\r\n\r\nfunction InboxLetter({ letter}) {\r\n\r\n    function Keyboard() {\r\n        const dispatch = useDispatch()\r\n        function handleClick(e) {\r\n            answerLetter(letter.markup.id, e.target.value)\r\n        }\r\n        switch(letter.expression.expectedType) {\r\n            case 'bool': return (\r\n                <div className='letter-keyboard'>\r\n                    <button onClick={handleClick} value='true'>Так</button>\r\n                    <button onClick={handleClick} value='false'>Ні</button>\r\n                </div>\r\n            )\r\n            default: return (\r\n                <div className='letter-keyboard'>\r\n                    <button onClick={handleClick} value='default'>Read</button>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <h3>{letter.markup.name}</h3>\r\n            <p>Analyze: {letter.sourceData.text}</p>\r\n            <p>Expression: {letter.expression.text}</p>\r\n            <Keyboard />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InboxLetter\r\n","\r\n\r\nimport React from 'react'\r\nimport { useState, useEffect, useReducer } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport axios from 'axios'\r\n\r\nimport { fetchInbox } from './slice';\r\n// import TasksFilter from '../TasksFilter/TasksFilter'\r\nimport InboxLetter from './InboxLetter/InboxLetter'\r\n\r\nfunction Inbox() {\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(fetchInbox())\r\n      }, [dispatch])\r\n\r\n    const inbox = useSelector(state => state.inbox.inboxData)\r\n    // const filterOn = useSelector(state => state.tasksFilter.filterOn)\r\n    // const priorityFilter = useSelector(state => state.tasksFilter.priority)\r\n    // const probabilityFilter = useSelector(state => state.tasksFilter.probability)\r\n\r\n    // const filterTask = (task) => {\r\n    //     if (\r\n    //             filterOn && (\r\n    //                 (probabilityFilter && (task.probability?.value !== probabilityFilter)) ||\r\n    //                 (priorityFilter && (task.priority?.value.toString() !== priorityFilter)) \r\n                    \r\n    //             )\r\n    //         ) {\r\n    //             //чому одне стрінг а інше number? бо одне із них інвертували додавши 1 Жопу\r\n    //             return false\r\n    //         }\r\n    //     return true\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            {/* <TasksFilter /> */}\r\n            <div className=\"tasks-container\">\r\n                {inbox.map(letter => {\r\n              return  <InboxLetter key={letter.markup.id} letter={letter}/>\r\n            })}\r\n            </div>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Inbox","import React from 'react'\r\nimport axios from 'axios'\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useState, useEffect } from 'react'\r\n\r\nimport { fetchLog } from './features/TheLog/logSlice'\r\nimport { toggleMindScrapModal } from './features/MindScrapForm/MindScrapModal/slice';\r\nimport { fetchInbox } from './features/Inbox/slice';\r\n\r\nimport logo from './logo.svg';\r\n\r\nimport Header from './features/Header/Header'\r\nimport CreateLetterModal from './features/CreateLetterModal/CreateLetterModal'\r\nimport Footer from './features/Standalone components/Footer'\r\nimport About from './features/About/About'\r\nimport Log from './features/TheLog/Log'\r\nimport Button from './features/Standalone components/Button';\r\nimport LogTextArea from './features/TheLog/LogTextArea';\r\nimport Article from './features/About/Articles/Article/Article';\r\nimport MindScrapModal from './features/MindScrapForm/MindScrapModal/MindScrapModal';\r\nimport Inbox from './features/Inbox/Inbox';\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch()\r\n  const inbox = useSelector(state => state.inbox.inboxData)\r\n\r\n  const log = useSelector((state) => state.log.logData)\r\n\r\n  //express node server test\r\n  const [someData, setSomeData] = useState()\r\n\r\n  //fetch everything\r\n  useEffect(() => {\r\n    console.log('fetchInbox')\r\n    dispatch(fetchInbox())\r\n  }, [dispatch])\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchLog())\r\n  }, [dispatch])\r\n\r\n  //remove spellcheck\r\n  useEffect(() => document.querySelectorAll('textarea').forEach((textarea) => textarea.spellcheck = false))\r\n  return (\r\n    <Router>\r\n      <Route\r\n        path='/' exact\r\n        render={\r\n          (props) => (\r\n            <>\r\n              <MindScrapModal />\r\n              <h1 className='main-title'>All in all, human is a variant</h1>\r\n              <button className='mind-modal-button' onClick={() => dispatch(toggleMindScrapModal())}>manual message catch/map</button>\r\n              <div className=\"main-container\">\r\n                <div className=\"sub-container\" >\r\n                  <Header title='Inbox' color='#ffe4e1' />\r\n                  <CreateLetterModal />\r\n                  {inbox.length > 0 ? <Inbox /> : 'You have no tasks lazy bitch'}\r\n                </div>\r\n                <div className=\"sub-container\">\r\n                  <Header title='History' color='#f2eecb' />\r\n                  <Log />\r\n                  <LogTextArea />\r\n                </div>\r\n\r\n              </div>\r\n\r\n              <Footer />\r\n            </>\r\n          )\r\n        }\r\n      />\r\n      <Route path='/about' exact\r\n        render={\r\n          (props) => (\r\n            <>\r\n              <div className=\"main-container\" >\r\n                <div className=\"sub-container\" style={{ width: '90%', minHeight: '650px' }}>\r\n                  <Header title=\"Hints and other important info\" color='#e8f48c' />\r\n                  <Article />\r\n                </div>\r\n              </div>\r\n              <About />\r\n            </>\r\n          )\r\n        }\r\n      />\r\n    </Router>\r\n\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.sass';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { store } from './app/store';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n       <App />\n    </Provider>\n   \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\nlet serverPath\nif (process.env.NODE_ENV === 'development') {serverPath = 'http://localhost:5000'}\nelse {serverPath = 'https://myfirstbackend1.herokuapp.com'}\n\nexport default serverPath\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n    priorityScale: 5,\r\n    probabilityScale: 10,\r\n}\r\n\r\nconst scalesSlice = createSlice({\r\n    name: 'scales',\r\n    initialState,\r\n    reducers: {},\r\n})\r\n\r\nexport default scalesSlice.reducer","import { createSlice, current } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState ={\r\n    priority: '',\r\n    probability: '',\r\n    filterOn: false,\r\n    show: false\r\n}\r\n\r\nconst tasksFilterSlice = createSlice({\r\n    name: 'tasksFilterSlice',\r\n    initialState,\r\n    reducers: {\r\n        setPriority: (state, priority) => {\r\n            state.priority = priority.payload\r\n            console.log(current.priority)\r\n        },\r\n        setProbability: (state, probability) => {\r\n            state.probability = probability.payload\r\n        },\r\n        filterSwitch: (state) => {\r\n            state.filterOn = !state.filterOn\r\n        },\r\n        toggleShowFilter: (state) => {\r\n            state.show = !state.show\r\n        }\r\n    }\r\n})\r\n\r\nexport const { setPriority, setProbability, filterSwitch, toggleShowFilter } = tasksFilterSlice.actions\r\n\r\nexport default tasksFilterSlice.reducer","import { configureStore } from '@reduxjs/toolkit';\r\nimport headerReducer from '../features/Header/headerSlice';\r\nimport logReducer from '../features/TheLog/logSlice'\r\nimport articlesReducer from '../features/About/Articles/articlesSlice'\r\nimport createLetterModalReducer from '../features/CreateLetterModal/slice'\r\nimport detailsReducer from '../features/Details/detailsSlice';\r\nimport scalesReducer from '../features/Standalone components/scalesSlice'\r\nimport tasksFilterReducer from '../features/TasksFilter/tasksFilterSlice';\r\nimport variantsReducer from '../features/Variants/slice'\r\nimport mindScrapModalReducer from '../features/MindScrapForm/MindScrapModal/slice'\r\nimport awaitingLettersReducer from '../features/CreateLetterModal/CreateLetterForm/slice'\r\nimport inboxReducer from '../features/Inbox/slice'\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    header: headerReducer,\r\n    log: logReducer,\r\n    articles: articlesReducer,\r\n    //addTaskForm: addTaskFormReducer,\r\n    createLetterModal: createLetterModalReducer,\r\n    details: detailsReducer,\r\n    scales: scalesReducer,\r\n    tasksFilter: tasksFilterReducer,\r\n    variants: variantsReducer,\r\n    mindScrapModal: mindScrapModalReducer,\r\n    awaitingLetters: awaitingLettersReducer,\r\n    inbox: inboxReducer\r\n  },\r\n});\r\n"],"sourceRoot":""}